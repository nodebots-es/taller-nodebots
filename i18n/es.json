{
  "title": "Taller NodeBots",
  "subtitle": "Pon tu arduino en marcha con Johnny-Five",
  "exercise": {
    "blink_blink": "Blink Blink",
    "servo_wave": "Saluda el Servo",
    "light_switch": "Interruptor",
    "street_lamp": "Lampara de noche",
    "ping_bell": "Alarma",
    "robot_arm": "Brazo Robot",
    "remote_temperature": "Temperatura Remota",
    "fire_alarm": "Alarma de Incendios"
  },
  "common": {
    "exercise": {
      "please_wait": "Espera a que se ejecuten las pruebas para tu solucion...",
      "pass": {
        "create_board_instance": "Instancia del Board creada",
        "create_led_instance": "Instancia de LED creada",
        "create_button_instance": "Instancia de Button creada",
        "create_speaker_instance": "Instancia de Piezo creada",
        "create_thermometer_instance": "Instancia de Thermometer creada",
        "create_sensor_instance": "Instancia de Sensor creada",
        "create_servo_instance": "Instancia de Servo creada",
        "create_motor_instance": "Instancia de Motor creada",
        "connect_led_to_pin": "LED conectado al pin {{pin}}",
        "connect_button_to_pin": "Button conectado al pin {{pin}}",
        "connect_speaker_to_pin": "Piezo conectado al pin {{pin}}",
        "connect_thermometer_to_pin": "Thermometer conectado al pin {{pin}}",
        "connect_sensor_to_pin": "Sensor conectado al pin {{pin}}",
        "connect_servo_to_pin": "Servo conectado al pin {{pin}}",
        "connect_motor_to_pin": "Motor conectado al pin {{pin}}",
        "read_analogue_values": "Los valores se han leido del pin {{pin}}",
        "pin_mode": "Pin {{pin}} se ha cambiado a modo {{mode}}",
        "board_wait_called": "board.wait executado"
      },
      "fail": {
        "create_board_instance": "No se a creado instancia de Board",
        "create_led_instance": "No se a creado instancia de LED",
        "create_button_instance": "No se a creado instancia de Button",
        "create_speaker_instance": "No se a creado instancia de Piezo",
        "create_thermometer_instance": "No se a creado instancia de Thermometer",
        "create_sensor_instance": "No se a creado instancia de Sensor",
        "create_servo_instance": "No se a creado instancia de Servo",
        "create_motor_instance": "No se a creado instancia de Motor",
        "connect_led_to_pin": "LED conectado al pin incorrecto",
        "connect_button_to_pin": "Button conectado al pin incorrecto",
        "connect_speaker_to_pin": "Piezo conectado al pin incorrecto",
        "connect_thermometer_to_pin": "Thermometer conectado al pin incorrecto",
        "connect_sensor_to_pin": "Sensor conectado al pin incorrecto",
        "connect_servo_to_pin": "Servo conectado al pin incorrecto",
        "connect_motor_to_pin": "Motor conectado al pin incorrecto",
        "read_analogue_values": "Los valores no se pudieron leer del pin {{pin}}",
        "pin_mode": "Pin {{pin}} se a cambiado al modo incorrecto",
        "board_wait_called": "board.wait no se ha llamado"
      }
    }
  },
  "exercises": {
    "blink_blink": {
      "pass": {
        "led_flashing": "LED is flashing once a second",
        "pin_turned_on": "Pin 13 was turned on",
        "pin_turned_off": "Pin 13 was turned off"
      },
      "fail": {
        "led_flashing": "LED is not flashing once a second",
        "pin_mode": "Pin 13 was not set to OUTPUT mode",
        "pin_turned_on": "Pin 13 was never turned on",
        "pin_turned_off": "Pin 13 was never turned off"
      }
    },
    "fire_alarm": {
      "pass": {
        "premature_fire_alarm": "Fire alarm has not gone off yet",
        "speaker_turned_on": "Piezo sounded when fire started",
        "led_turned_on": "LED turned on when fire started",
        "speaker_turned_off": "Piezo became silent when fire stopped",
        "led_turned_off": "LED turned off when fire stopped",
        "speaker_reset": "Piezo was turned off when reset button pressed",
        "led_reset": "LED was turned off when reset button pressed",
        "speaker_turned_off_after_reset": "Piezo was turned off after it was turned on and reset button pressed",
        "led_turned_off_after_reset": "LED was turned off after it was turned on and reset button pressed",
        "speaker_stayed_off_after_reset_before_temperature_drops": "Piezo stayed off after reset button pressed before temperature dropped below 50",
        "led_stayed_off_after_reset_before_temperature_drops": "LED stayed off after reset button pressed before temperature dropped below 50",
        "speaker_stayed_off_after_fire_after_reset": "Piezo turned on when fire started after reset button was pressed",
        "led_stayed_off_after_fire_after_reset": "LED turned on when fire started after reset button was pressed"
      },
      "fail": {
        "premature_fire_alarm": "Fire alarm went off before a temperature was received!",
        "speaker_turned_on": "Piezo was not turned on when fire started",
        "led_turned_on": "LED was not turned on when fire started",
        "speaker_turned_off": "Piezo was not turned off when fire stopped",
        "led_turned_off": "LED was not turned off when fire stopped",
        "speaker_reset": "Piezo was not turned off when reset button pressed",
        "led_reset": "LED was not turned off when reset button pressed",
        "speaker_turned_off_after_reset": "Piezo was not turned off after it was turned on and reset button pressed",
        "led_turned_off_after_reset": "LED was not turned off after it was turned on and reset button pressed",
        "speaker_stayed_off_after_reset_before_temperature_drops": "Piezo turned back on after reset button pressed before temperature dropped below 50",
        "led_stayed_off_after_reset_before_temperature_drops": "LED turned back on after reset button pressed before temperature dropped below 50",
        "speaker_stayed_off_after_fire_after_reset": "Piezo was not turned on when fire started after reset button was pressed",
        "led_stayed_off_after_fire_after_reset": "LED was not turned on when fire started after reset button was pressed"
      }
    },
    "light_switch": {
      "pass": {
        "led_turn_off_after_first_press": "LED turned off after first button press",
        "led_turn_on_after_first_press": "LED turned on after first button press",
        "led_turn_off_after_second_press": "LED turned off after second button press",
        "led_turn_on_after_second_press": "LED turned on after second button press",
        "led_turn_off_after_third_press": "LED turned off after third button press",
        "led_turn_on_after_third_press": "LED turned on after third button press",
        "led_turn_off_after_fourth_press": "LED turned off after fourth button press",
        "led_turn_on_after_fourth_press": "LED turned on after fourth button press"
      },
      "fail": {
        "led_turn_off_after_first_press": "LED did not turn off after first button press",
        "led_turn_on_after_first_press": "LED did not turn on after first button press",
        "led_turn_off_after_second_press": "LED did not turn off after second button press",
        "led_turn_on_after_second_press": "LED did not turn on after second button press",
        "led_turn_off_after_third_press": "LED did not turn off after third button press",
        "led_turn_on_after_third_press": "LED did not turn on after third button press",
        "led_turn_off_after_fourth_press": "LED did not turn off after fourth button press",
        "led_turn_on_after_fourth_press": "LED did not turn on after fourth button press"
      }
    },
    "ping_bell": {
      "pass": {
        "speaker_played_tune_on_udp_message": "Piezo played a tone when sent a UDP message"
      },
      "fail": {
        "speaker_played_tune_on_udp_message": "Piezo didn't play a tone when sent a UDP message"
      }
    },
    "remote_temperature": {
      "pass": {
        "no_get_temperature_on_remote": "Remote has method 'getTemperature'",
        "got_wrong_temperature": "Received expected temperature"
      },
      "fail": {
        "no_get_temperature_on_remote": "Remote has no method 'getTemperature'",
        "got_wrong_temperature": "Didn't receive expected temperature"
      }
    },
    "robot_arm": {
      "pass": {
        "servo_to_called": "servo.to was called when sensor was read",
        "servo_moved_to_correct_angle": "Moved servo to correct angle"
      },
      "fail": {
        "servo_to_called": "servo.to wasn't called when sensor was read",
        "servo_moved_to_correct_angle": "Didn't move servo to correct angle"
      }
    },
    "servo_wave": {
      "pass": {
        "servo_sweep": "servo swept",
        "servo_did_not_stop": "servo stopped before moving to expected angle",
        "servo_stopped": "servo did not stop before waiting",
        "servo_wait": "servo waited for expected time",
        "servo_stop_before_return_to_center": "servo stopped before returning to center",
        "servo_returned_to_center": "servo returned to center"
      },
      "fail": {
        "servo_sweep": "servo did not sweep",
        "servo_did_not_stop": "servo did not stop before moving to expected angle",
        "servo_stopped": "servo unexpectedly stopped before waiting",
        "servo_wait": "servo did not wait for expected time",
        "servo_stop_before_return_to_center": "servo did not stop before returning to center",
        "servo_returned_to_center": "servo did not return to center"
      }
    },
    "street_lamp": {
      "pass": {
        "led_turned_on_when_resistor_value_high": "LED turned on when resistor value high",
        "led_turned_off_when_resistor_value_low": "LED turned off when resistor value low",
        "led_turned_off_after_turned_on": "LED was turned off after it was turned on",
        "led_turned_on_after_turned_off": "LED was turned on after it was turned off"
      },
      "fail": {
        "led_turned_on_when_resistor_value_high": "LED was not turned on when resistor value high",
        "led_turned_off_when_resistor_value_low": "LED was not turned off when resistor value low",
        "led_turned_off_after_turned_on": "LED was not turned off after it was turned on",
        "led_turned_on_after_turned_off": "LED was not turned on after it was turned off"
      }
    }
  }
}
